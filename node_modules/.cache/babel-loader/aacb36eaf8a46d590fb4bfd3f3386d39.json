{"ast":null,"code":"var _jsxFileName = \"/Users/dorianmeade/Desktop/dev/merng/merng-client/src/components/DeleteButton.js\";\nimport React, { useState } from 'react';\nimport { Button, Confirm, Icon } from 'semantic-ui-react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\nimport MyPopup from '../util/MyPopup';\n\nfunction DeleteButton({\n  postId,\n  commentId,\n  callback\n}) {\n  const [confirmOpen, setConfirmOpen] = useState(false); //* mutation dynamic to delete post or delete comment\n\n  const mutation = commentId ? DELETE_COMMENT_MUTATION : DELETE_POST_MUTATION;\n  const [deletePostOrComment] = useMutation(mutation, {\n    update(proxy) {\n      // if reached-> user has confirmed \n      setConfirmOpen(false); // remove post from cache\n\n      if (!commentId) {\n        const data = proxy.readQuery({\n          query: FETCH_POSTS_QUERY\n        });\n        data.getPosts = data.getPosts.filter(p => p.id !== postId); //TODO: deletion from cache is not removing it from ui\n\n        proxy.writeQuery({\n          query: FETCH_POSTS_QUERY,\n          data\n        });\n      } // call function to redirect to home, if post deleted\n\n\n      if (callback) callback();\n    },\n\n    variables: {\n      postId,\n      commentId\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MyPopup, {\n    content: commentId ? 'Delete comment' : 'Delete post',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    as: \"div\",\n    color: \"red\",\n    floated: \"right\",\n    onClick: () => setConfirmOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"trash\",\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Confirm //delete confirmation modal \n  , {\n    open: confirmOpen,\n    onCancel: () => setConfirmOpen(false) //user does not want to delete post\n    ,\n    onConfirm: deletePostOrComment //user continues to delete post, call mutation callback\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default DeleteButton;\nconst DELETE_POST_MUTATION = gql`\n    mutation deletePost($postId: ID!){\n        deletePost(postId: $postId)\n    }\n`;\nconst DELETE_COMMENT_MUTATION = gql`\n    mutation deleteComment($postId: ID!, $commentId: ID!){\n        deleteComment(postId: $postId, commentId: $commentId){\n            id \n            comments {\n                id\n                username\n                createdAt\n                body\n            }\n            commentCount\n        }\n    }\n`;","map":{"version":3,"sources":["/Users/dorianmeade/Desktop/dev/merng/merng-client/src/components/DeleteButton.js"],"names":["React","useState","Button","Confirm","Icon","gql","useMutation","FETCH_POSTS_QUERY","MyPopup","DeleteButton","postId","commentId","callback","confirmOpen","setConfirmOpen","mutation","DELETE_COMMENT_MUTATION","DELETE_POST_MUTATION","deletePostOrComment","update","proxy","data","readQuery","query","getPosts","filter","p","id","writeQuery","variables","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,QAAsC,mBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,SAAQC,iBAAR,QAAiC,iBAAjC;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAEA,SAASC,YAAT,CAAsB;AAACC,EAAAA,MAAD;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAtB,EAAoD;AAChD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C,CADgD,CAGhD;;AACA,QAAMc,QAAQ,GAAGJ,SAAS,GAAGK,uBAAH,GAA6BC,oBAAvD;AAEA,QAAM,CAACC,mBAAD,IAAwBZ,WAAW,CAACS,QAAD,EAAW;AAChDI,IAAAA,MAAM,CAACC,KAAD,EAAO;AACT;AACAN,MAAAA,cAAc,CAAC,KAAD,CAAd,CAFS,CAGT;;AACA,UAAG,CAACH,SAAJ,EACA;AACI,cAAMU,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB;AACzBC,UAAAA,KAAK,EAAEhB;AADkB,SAAhB,CAAb;AAGAc,QAAAA,IAAI,CAACG,QAAL,GAAgBH,IAAI,CAACG,QAAL,CAAcC,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASjB,MAAnC,CAAhB,CAJJ,CAIiE;;AAC7DU,QAAAA,KAAK,CAACQ,UAAN,CAAiB;AAACL,UAAAA,KAAK,EAAEhB,iBAAR;AAA2Bc,UAAAA;AAA3B,SAAjB;AACH,OAXQ,CAYT;;;AACA,UAAIT,QAAJ,EAAcA,QAAQ;AACzB,KAf+C;;AAgBhDiB,IAAAA,SAAS,EAAE;AACPnB,MAAAA,MADO;AAEPC,MAAAA;AAFO;AAhBqC,GAAX,CAAzC;AAsBA,sBACI,uDACA,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,SAAS,GAAG,gBAAH,GAAsB,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACA,IAAA,EAAE,EAAC,KADH;AAEA,IAAA,KAAK,EAAC,KAFN;AAGA,IAAA,OAAO,EAAC,OAHR;AAIA,IAAA,OAAO,EAAE,MAAMG,cAAc,CAAC,IAAD,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,KAAK,EAAE;AAAEgB,MAAAA,MAAM,EAAE;AAAV,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,CADA,eAWA,oBAAC,OAAD,CAAU;AAAV;AACI,IAAA,IAAI,EAAEjB,WADV;AAEI,IAAA,QAAQ,EAAE,MAAMC,cAAc,CAAC,KAAD,CAFlC,CAE2C;AAF3C;AAGI,IAAA,SAAS,EAAEI,mBAHf,CAGoC;AAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXA,CADJ;AAmBH;;AACD,eAAeT,YAAf;AAEA,MAAMQ,oBAAoB,GAAGZ,GAAI;AACjC;AACA;AACA;AACA,CAJA;AAMA,MAAMW,uBAAuB,GAAGX,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Confirm, Icon } from 'semantic-ui-react';\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport {FETCH_POSTS_QUERY } from '../util/graphql'\nimport MyPopup from '../util/MyPopup'\n\nfunction DeleteButton({postId, commentId, callback}){\n    const [confirmOpen, setConfirmOpen] = useState(false);\n\n    //* mutation dynamic to delete post or delete comment\n    const mutation = commentId ? DELETE_COMMENT_MUTATION : DELETE_POST_MUTATION;\n\n    const [deletePostOrComment] = useMutation(mutation, {\n        update(proxy){\n            // if reached-> user has confirmed \n            setConfirmOpen(false);\n            // remove post from cache\n            if(!commentId)\n            {\n                const data = proxy.readQuery({\n                    query: FETCH_POSTS_QUERY\n                });\n                data.getPosts = data.getPosts.filter(p => p.id !== postId)   //TODO: deletion from cache is not removing it from ui\n                proxy.writeQuery({query: FETCH_POSTS_QUERY, data})    \n            }\n            // call function to redirect to home, if post deleted\n            if (callback) callback()\n        }, \n        variables: {\n            postId, \n            commentId\n        }\n    })\n\n    return (\n        <> \n        <MyPopup content={commentId ? 'Delete comment' : 'Delete post'}>\n            <Button\n            as=\"div\"\n            color=\"red\"\n            floated=\"right\"\n            onClick={() => setConfirmOpen(true)}\n            >\n                <Icon name=\"trash\" style={{ margin: 0 }} />\n            </Button>\n        </MyPopup>\n        <Confirm  //delete confirmation modal \n            open={confirmOpen}\n            onCancel={() => setConfirmOpen(false)} //user does not want to delete post\n            onConfirm={deletePostOrComment} //user continues to delete post, call mutation callback\n        />\n        </>\n    )\n}\nexport default DeleteButton;\n\nconst DELETE_POST_MUTATION = gql`\n    mutation deletePost($postId: ID!){\n        deletePost(postId: $postId)\n    }\n`\n\nconst DELETE_COMMENT_MUTATION = gql`\n    mutation deleteComment($postId: ID!, $commentId: ID!){\n        deleteComment(postId: $postId, commentId: $commentId){\n            id \n            comments {\n                id\n                username\n                createdAt\n                body\n            }\n            commentCount\n        }\n    }\n`"]},"metadata":{},"sourceType":"module"}