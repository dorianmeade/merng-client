{"ast":null,"code":"var _jsxFileName = \"/Users/dorianmeade/Desktop/dev/merng/merng-client/src/routes/Posts.js\";\nimport React, { useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition } from 'semantic-ui-react';\nimport { AuthContext } from '../context/auth';\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\n\nfunction Posts() {\n  const {\n    user\n  } = useContext(AuthContext); //get context access\n\n  const {\n    loading,\n    data\n  } = useQuery(FETCH_POSTS_QUERY);\n  return /*#__PURE__*/React.createElement(Grid, {\n    columns: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Row, {\n    className: \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Recent Posts\")), /*#__PURE__*/React.createElement(Grid.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, user && /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  })), loading ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Loading posts..\") : /*#__PURE__*/React.createElement(Transition.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, data.getPosts && data.getPosts.map(post => /*#__PURE__*/React.createElement(Grid.Column, {\n    key: post.id,\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(PostCard, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/dorianmeade/Desktop/dev/merng/merng-client/src/routes/Posts.js"],"names":["React","useContext","useQuery","Grid","Transition","AuthContext","PostCard","PostForm","FETCH_POSTS_QUERY","Posts","user","loading","data","getPosts","map","post","id","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AAEA,SAASC,KAAT,GAAiB;AAEb,QAAM;AAAEC,IAAAA;AAAF,MAAWT,UAAU,CAACI,WAAD,CAA3B,CAFa,CAE6B;;AAE1C,QAAM;AACFM,IAAAA,OADE;AAEFC,IAAAA;AAFE,MAGFV,QAAQ,CAACM,iBAAD,CAHZ;AAKA,sBACI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,eAKI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,IAAI,iBACD,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFR,EAMCC,OAAO,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADI,gBAGJ,oBAAC,UAAD,CAAY,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,IAAI,CAACC,QAAL,IACAD,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAmBC,IAAD,iBACd,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAvB;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ,CAHR,CATJ,CALJ,CADJ;AA6BH;;AACD,eAAeN,KAAf","sourcesContent":["import React, { useContext} from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, Transition } from 'semantic-ui-react';\n\nimport { AuthContext } from '../context/auth'\nimport PostCard from '../components/PostCard';\nimport PostForm from '../components/PostForm';\nimport { FETCH_POSTS_QUERY } from '../util/graphql'\n\nfunction Posts() {\n\n    const { user } = useContext(AuthContext); //get context access\n\n    const {\n        loading,\n        data\n    } = useQuery(FETCH_POSTS_QUERY);\n\n    return (\n        <Grid columns={3}>\n            <Grid.Row className=\"page-title\">\n                <span>Recent Posts\n                </span> \n            </Grid.Row>\n            <Grid.Row>\n                {user && (\n                    <Grid.Column>\n                        <PostForm/>\n                    </Grid.Column>\n                )}\n            {loading ? (\n                <h1>Loading posts..</h1>\n            ) : (\n                <Transition.Group>\n                    {\n                        data.getPosts &&\n                        data.getPosts.map((post) => (\n                            <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\n                            <PostCard post={post} />\n                            </Grid.Column>\n                        ))\n                    }\n                </Transition.Group>\n            )}\n            </Grid.Row>\n        </Grid>\n    );\n}\nexport default Posts;"]},"metadata":{},"sourceType":"module"}