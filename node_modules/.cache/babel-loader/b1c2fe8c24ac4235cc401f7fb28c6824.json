{"ast":null,"code":"var _jsxFileName = \"/Users/dorianmeade/Desktop/dev/merng/merng-client/src/components/LikeButton.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Icon, Label } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport MyPopup from '../util/MyPopup'; // use user prop to determine type of button to display \n\nfunction LikeButton({\n  user,\n  post: {\n    id,\n    likeCount,\n    likes\n  }\n}) {\n  const [liked, setLiked] = useState('false');\n  useEffect(() => {\n    if (user && likes.find(like => like.username === user.username)) {\n      setLiked(true);\n    } else setLiked(false);\n  }, [user, likes]);\n  const [likePost] = useMutation(LIKE_POST_MUTATION, {\n    variables: {\n      postId: id\n    }\n  });\n  const likeBtn = user ? liked ? /*#__PURE__*/React.createElement(Button, {\n    color: \"purple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    color: \"purple\",\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    as: Link,\n    to: \"/login\",\n    color: \"purple\",\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n  return /*#__PURE__*/React.createElement(MyPopup, {\n    content: liked ? \"Unlike\" : \"Like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    as: \"div\",\n    labelPosition: \"right\",\n    onClick: user ? likePost : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, likeBtn, /*#__PURE__*/React.createElement(Label, {\n    basic: true,\n    color: \"purple\",\n    pointing: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, likeCount)));\n}\n\nconst LIKE_POST_MUTATION = gql`\n    mutation likePost($postId: ID!){\n        likePost(postId: $postId){\n            id\n            likes {\n                id\n                username\n            }\n            likeCount\n        }\n    }\n`;\nexport default LikeButton;","map":{"version":3,"sources":["/Users/dorianmeade/Desktop/dev/merng/merng-client/src/components/LikeButton.js"],"names":["React","useEffect","useState","Button","Icon","Label","Link","useMutation","gql","MyPopup","LikeButton","user","post","id","likeCount","likes","liked","setLiked","find","like","username","likePost","LIKE_POST_MUTATION","variables","postId","likeBtn","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,OAAP,MAAoB,iBAApB,C,CAEA;;AACA,SAASC,UAAT,CAAoB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,SAAN;AAAiBC,IAAAA;AAAjB;AAAb,CAApB,EAA0D;AACtD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,OAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGU,IAAI,IAAII,KAAK,CAACG,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkBT,IAAI,CAACS,QAA5C,CAAX,EAAiE;AAC7DH,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD,MAEOA,QAAQ,CAAC,KAAD,CAAR;AACV,GAJQ,EAIN,CAACN,IAAD,EAAOI,KAAP,CAJM,CAAT;AAMA,QAAM,CAACM,QAAD,IAAad,WAAW,CAACe,kBAAD,EAAqB;AAC/CC,IAAAA,SAAS,EAAE;AAACC,MAAAA,MAAM,EAAEX;AAAT;AADoC,GAArB,CAA9B;AAIA,QAAMY,OAAO,GAAGd,IAAI,GAChBK,KAAK,gBACD,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADC,gBAKD,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,KAAK,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANY,gBAWhB,oBAAC,MAAD;AACI,IAAA,EAAE,EAAEV,IADR;AAEI,IAAA,EAAE,EAAC,QAFP;AAGI,IAAA,KAAK,EAAC,QAHV;AAII,IAAA,KAAK,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAXJ;AAoBA,sBACI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEU,KAAK,GAAG,QAAH,GAAc,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,KAAX;AAAiB,IAAA,aAAa,EAAC,OAA/B;AAAuC,IAAA,OAAO,EAAGL,IAAI,GAAEU,QAAF,GAAaK,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,OADL,eAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,KAAK,EAAC,QAAnB;AAA4B,IAAA,QAAQ,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,SADL,CAFJ,CADJ,CADJ;AAUH;;AAED,MAAMQ,kBAAkB,GAAGd,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAYA,eAAeE,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Icon, Label } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom'\nimport { useMutation } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n\nimport MyPopup from '../util/MyPopup'\n\n// use user prop to determine type of button to display \nfunction LikeButton({user, post: { id, likeCount, likes}}){\n    const [liked, setLiked] = useState('false'); \n    \n    useEffect(() => {\n        if(user && likes.find((like) => like.username === user.username)){\n            setLiked(true);\n        } else setLiked(false)\n    }, [user, likes]);\n\n    const [likePost] = useMutation(LIKE_POST_MUTATION, {\n        variables: {postId: id}\n    })\n    \n    const likeBtn = user ? (\n        liked ? (\n            <Button color=\"purple\">\n                <Icon name=\"heart\" />\n            </Button>\n        ) : (\n            <Button color=\"purple\" basic>\n                <Icon name=\"heart\" />\n            </Button>\n        )\n    ) : (\n        <Button \n            as={Link} \n            to='/login' \n            color=\"purple\" \n            basic>\n            <Icon name=\"heart\" />\n        </Button> \n    )\n\n    return(\n        <MyPopup content={liked ? \"Unlike\" : \"Like\"}>\n            <Button as=\"div\" labelPosition=\"right\" onClick={ user? likePost : undefined }>\n                {likeBtn}\n                <Label basic color=\"purple\" pointing=\"left\">\n                    {likeCount}\n                </Label>\n            </Button>\n        </MyPopup>\n    )\n}\n\nconst LIKE_POST_MUTATION = gql`\n    mutation likePost($postId: ID!){\n        likePost(postId: $postId){\n            id\n            likes {\n                id\n                username\n            }\n            likeCount\n        }\n    }\n`\nexport default LikeButton;\n\n"]},"metadata":{},"sourceType":"module"}